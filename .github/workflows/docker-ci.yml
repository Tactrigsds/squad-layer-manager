name: Docker Image CI
# Allow writing to GitHub Packages
permissions:
  contents: read
  packages: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  typecheck_and_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check formatting
        run: pnpm prettier **/*.{ts,tsx,js} --check --plugin '@babel/plugin-proposal-explicit-resource-management'

      - name: Type check
        run: pnpm tsc -b

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get branch name
        id: branch
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})
          else
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          fi

          if [[ "$BRANCH_NAME" =~ [A-Z] ]]; then
            echo "Error: Branch name must be lowercase"
            exit 1
          fi

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get lowercase repository owner
        id: owner
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "name=$OWNER" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            GIT_SHA=${{ github.sha }}
            GIT_BRANCH=${{ steps.branch.outputs.BRANCH_NAME }}
          tags: |
            ${{ steps.branch.outputs.BRANCH_NAME == 'main' && format('ghcr.io/{0}/squad-layer-manager:latest', steps.owner.outputs.name) || '' }}
            ${{ contains(github.ref, 'refs/tags/') && format('ghcr.io/{0}/squad-layer-manager:{1}', steps.owner.outputs.name, github.ref_name) || '' }}
            ${{ github.event_name == 'pull_request' && format('ghcr.io/{0}/squad-layer-manager:latest-{1}', steps.owner.outputs.name, steps.branch.outputs.BRANCH_NAME) || '' }}
            ${{ format('ghcr.io/{0}/squad-layer-manager:commit-{1}', steps.owner.outputs.name, github.sha) }}
