name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Get short SHA
      id: sha
      run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Get branch name
      id: branch
      run: |
        if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_OUTPUT
        else
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        fi

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and tag Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: |
          squad-layer-manager:${{ steps.sha.outputs.SHA }}
          ${{ steps.branch.outputs.BRANCH_NAME == 'main' && 'squad-layer-manager:latest' || '' }}
          ${{ github.event_name == 'pull_request' && format('squad-layer-manager:latest-{0}', steps.branch.outputs.BRANCH_NAME) || '' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # Move the cache
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
